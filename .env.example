# Environment Variables for AWS EC2 Production Deployment
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================

# Telegram Bot Token (REQUIRED)
# Get this from @BotFather on Telegram
# Replace with your actual bot token
TELEGRAM_TOKEN=your_telegram_bot_token_here

# Webhook URL (REQUIRED for production)
# This should be your EC2 public IP or domain name
# Example: http://your-ec2-ip or https://your-domain.com
WEBHOOK_URL=http://your-ec2-public-ip

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database URL (RECOMMENDED for production)
# For PostgreSQL on AWS RDS (recommended):
# DATABASE_URL=postgresql://username:password@your-rds-endpoint.amazonaws.com:5432/database_name
# 
# For local PostgreSQL:
# DATABASE_URL=postgresql://username:password@localhost:5432/database_name
# 
# For SQLite (development only - not recommended for production):
# DATABASE_URL=sqlite:///airdrop_bot.db
DATABASE_URL=postgresql://username:password@your-database-host:5432/your_database_name

# =============================================================================
# FLASK APPLICATION CONFIGURATION
# =============================================================================

# Flask environment (production/development)
FLASK_ENV=production

# Secret key for Flask sessions (REQUIRED)
# Generate a secure random key: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-here

# =============================================================================
# AWS CONFIGURATION (Optional)
# =============================================================================

# AWS credentials (optional - can be set via AWS CLI or IAM roles)
# Uncomment and set these if not using AWS CLI configuration or IAM roles
# AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AWS_DEFAULT_REGION=us-east-1

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Development mode settings
# Set to 'true' to use polling instead of webhooks (development only)
USE_POLLING=false

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Maximum number of worker processes for Gunicorn
# Leave empty to auto-detect based on CPU cores
# WORKERS=2

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Allowed hosts (comma-separated list)
# Example: your-domain.com,www.your-domain.com,your-ec2-ip
ALLOWED_HOSTS=localhost,127.0.0.1

# CORS settings (if needed)
# CORS_ORIGINS=https://your-frontend-domain.com

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log file paths (optional - defaults to logs/ directory)
# ACCESS_LOG=/var/log/airdropbot/access.log
# ERROR_LOG=/var/log/airdropbot/error.log

# =============================================================================
# TELEGRAM GROUPS AND CHANNELS
# =============================================================================

# Required Telegram groups/channels (comma-separated)
# These should match the GROUPS_LIST in settings.py
REQUIRED_GROUPS=greendale1,greendale2

# Twitter/X configuration
TWITTER_PAGE_LINK=https://x.com/greendalegame

# =============================================================================
# NOTES
# =============================================================================

# SECURITY WARNING: Never commit actual credentials to version control!
# Use strong, unique passwords and tokens
# Consider using AWS Secrets Manager for sensitive data in production
# Regularly rotate your credentials

# For production deployment:
# 1. Copy this file to .env
# 2. Replace all placeholder values with actual values
# 3. Ensure .env is in your .gitignore file
# 4. Set appropriate file permissions: chmod 600 .env